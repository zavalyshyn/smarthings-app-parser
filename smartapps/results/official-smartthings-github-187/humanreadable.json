{
    "apps": [
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpGet"
            ],
            "name": "Netatmo (Connect)",
            "description": "Integrate your Netatmo devices with SmartThings",
            "category": "Netatmo (Connect)",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "carbonDioxide",
                "handleLevel"
            ],
            "capabilities": [
                "carbonDioxideMeasurement",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "CO2 Vent",
            "description": "Turn on a switch when CO2 levels are too high",
            "category": "Health & Wellness",
            "actions": []
        },
        {
            "subscriptions": [
                "acceleration.active"
            ],
            "capabilities": [
                "accelerationSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Monitor on Sense",
            "description": "Turn on switch when vibration is sensed",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "contact"
            ],
            "capabilities": [
                "contactSensor",
                "colorControl"
            ],
            "sources": [],
            "sinks": [],
            "name": "Medicine Management - Contact Sensor",
            "description": "This supports devices with capabilities of ContactSensor and ColorControl (LED). It sends an in-app and ambient light notification if you forget to open the drawer or cabinet where meds are stored. A reminder will be set to a single time per day. If the draw or cabinet isn't opened within 60 minutes of that reminder, an in-app message will be sent. If the draw or cabinet still isn't opened after an additional 10 minutes, then an LED light turns red until the draw or cabinet is opened",
            "category": "Health & Wellness",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor",
                "switch"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "Cameras On When I'm Away",
            "description": "Turn cameras on when I'm away",
            "category": "Available Beta Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "contact"
            ],
            "capabilities": [
                "contactSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Let There Be Light!",
            "description": "Turn your lights on when a SmartSense Multi is opened and turn them off when it is closed.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "location"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Big Turn OFF",
            "description": "Turn your lights off when the SmartApp is tapped or activated",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "motionSensor",
                "contactSensor",
                "thermostat",
                "presenceSensor",
                "temperatureMeasurement",
                "accelerationSensor",
                "waterSensor",
                "illuminanceMeasurement",
                "relativeHumidityMeasurement",
                "alarm",
                "lock"
            ],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpGet",
                "httpPostJson"
            ],
            "name": "Logitech Harmony (Connect)",
            "description": "Allows you to integrate your Logitech Harmony account with SmartThings.",
            "category": "Logitech Harmony (Connect)",
            "actions": [
                "callbyreflection",
                "sendHubCommand"
            ]
        },
        {
            "subscriptions": [
                "temperature",
                "acceleration.active"
            ],
            "capabilities": [
                "accelerationSensor",
                "temperatureMeasurement",
                "colorControl"
            ],
            "sources": [],
            "sinks": [],
            "name": "Medicine Management - Temp-Motion",
            "description": "This only supports devices with capabilities TemperatureMeasurement, AccelerationSensor and ColorControl (LED). Supports two use cases. First, will notifies via in-app if the fridge where meds are stored exceeds a temperature threshold set in degrees. Secondly, sends an in-app and ambient light notification if you forget to take your meds by sensing movement of the medicine box in the fridge. A reminder will be set to a single time per day. If the box isn't moved within 60 minutes of that reminder, an in-app message will be sent. If the box still isn't moved after an additional 10 minutes, then an LED light turns red until the box is moved",
            "category": "Health & Wellness",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [],
            "name": "Feed My Pet",
            "description": "Setup a schedule for when your pet is fed. Purchase any SmartThings certified pet food feeder and install the Feed My Pet app, and set the time. You and your pet are ready to go. Your life just got smarter.",
            "category": "Pets",
            "actions": []
        },
        {
            "subscriptions": [
                "presence",
                "location",
                "sunrise",
                "sunset"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "mode",
                "presence",
                "location"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Routine Director",
            "description": "Monitor a set of presence sensors and activate routines based on whether your home is empty or occupied.  Each presence status change will check against the current 'sun state' to run routines based on occupancy and whether the sun is up or down.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected"
            ],
            "capabilities": [
                "smokeDetector",
                "carbonMonoxideDetector",
                "thermostat"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [],
            "name": "Thermostats",
            "description": "Receive notifications when anything happens in your home.",
            "category": "SmartSolutions",
            "actions": []
        },
        {
            "subscriptions": [
                "alarm",
                "water.wet"
            ],
            "capabilities": [
                "waterSensor"
            ],
            "sources": [
                "alarm",
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Flood Alert!",
            "description": "Get a push notification or text message when water is detected where it doesn't belong.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "location",
                "mode"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Smart Home Ventilation",
            "description": "Allows for setting up various schedule scenarios for turning on and off home ventilation switches.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "switch",
                "switchHandler"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "mode"
            ],
            "sinks": [],
            "name": "Switch Activates Home Phrase or Mode",
            "description": "Ties a Hello, Home phrase or mode to a switch's state. Perfect for use with IFTTT.",
            "category": "Convenience",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "When It's Going to Rain",
            "description": "Is your shed closed? Are your windows shut? Is the grill covered? Are your dogs indoors? Will the lawn and plants need to be watered tomorrow?",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "sleeping"
            ],
            "capabilities": [],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Jawbone Button Notifier",
            "description": "Send push notifications or text messages with your Jawbone Up when you hold the button.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "switch.on"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Power Allowance",
            "description": "Save energy or restrict total time an appliance (like a curling iron or TV) can be in use.  When a switch turns on, automatically turn it back off after a set number of minutes you specify.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "button"
            ],
            "capabilities": [
                "colorControl",
                "button"
            ],
            "sources": [],
            "sinks": [],
            "name": "Mini Hue Controller",
            "description": "Control one or more Hue bulbs using an Aeon MiniMote.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Garage Door Opener",
            "description": "Open your garage door when a switch is turned on.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "water"
            ],
            "capabilities": [
                "waterSensor",
                "valve"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Close The Valve",
            "description": "Close a selected valve if moisture is detected, and get notified by SMS and push notification.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "switch",
                "switchHandler"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Switch Activates Home Phrase",
            "description": "Ties a Hello, Home phrase to a switch's state. Perfect for use with IFTTT.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "motion.inactive",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "mediaController",
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "button"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Simple Sync Trigger",
            "description": "Trigger Simple Control activities when certain actions take place in your home.",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "motion"
            ],
            "capabilities": [
                "motionSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "My Light Toggle",
            "description": "Toggle lights on/off with a motion sensor",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Habit Helper",
            "description": "Add something you want to be reminded about each day and get a text message to help you form positive habits.",
            "category": "Family",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor",
                "button",
                "musicPlayer"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Speaker Mood Music",
            "description": "Plays a selected song or station.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "presence"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "The Flasher",
            "description": "Flashes a set of lights in response to motion, an open/close event, or a switch.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "motion.active"
            ],
            "capabilities": [
                "motionSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Brighten My Path",
            "description": "Turn your lights on when motion is detected.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "location",
                "null"
            ],
            "capabilities": [
                "switch",
                "lock",
                "thermostat",
                "doorControl",
                "colorControl",
                "musicPlayer",
                "switchLevel"
            ],
            "sources": [
                "location"
            ],
            "sinks": [
                "mappings"
            ],
            "name": "Simple Control",
            "description": "Integrate SmartThings with your Simple Control activities.",
            "category": "My Apps",
            "actions": [
                "callbyreflection",
                "sendHubCommand"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [
                "mode",
                "phone"
            ],
            "sinks": [
                "httpGet",
                "sendSms"
            ],
            "name": "Shabbat and Holiday Modes",
            "description": "Changes the mode at candle lighting and back after havdalah.  Uses the HebCal.com API to look for days that are shabbat or chag and pull real time candle lighting and havdalah times to change modes automatically",
            "category": "My Apps",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "location",
                "temperature",
                "thermostatMode"
            ],
            "capabilities": [
                "thermostat",
                "temperatureMeasurement"
            ],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Keep Me Cozy II",
            "description": "Works the same as Keep Me Cozy, but enables you to pick an alternative temperature sensor in a separate space from the thermostat. Focuses on making you comfortable where you are spending your time rather than where the thermostat is located.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "location"
            ],
            "capabilities": [
                "switch",
                "thermostat",
                "lock"
            ],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Make It So",
            "description": "Saves the states of a specified set switches and thermostat setpoints and restores them at each mode change. To use 1) Set the mode, 2) Change switches and setpoint to where you want them for that mode, and 3) Install or update the app. Changing to that mode or touching the app will set the devices to the saved state.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "button"
            ],
            "capabilities": [
                "button",
                "musicPlayer"
            ],
            "sources": [],
            "sinks": [],
            "name": "Sonos Remote Control",
            "description": "Control your Sonos system with an Aeon Minimote",
            "category": "SmartThings Internal",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpGet"
            ],
            "name": "Wattvision Manager",
            "description": "Monitor your whole-house energy use by connecting to your Wattvision account",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "httpGet",
                "httpPost"
            ],
            "name": "Tesla (Connect)",
            "description": "Integrate your Tesla car with SmartThings.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "motionSensor",
                "contactSensor"
            ],
            "sources": [],
            "sinks": [
                "sendSms"
            ],
            "name": "Smart Care: Daily Routine",
            "description": "Stay connected to your loved ones. Get notified if they are not up and moving around by a specified time and/or if they have not opened a cabinet or door according to a set schedule.",
            "category": "Family",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open"
            ],
            "capabilities": [
                "contactSensor"
            ],
            "sources": [],
            "sinks": [],
            "name": "Notify Me When It Opens",
            "description": "Get a push message sent to your phone when an open/close sensor is opened.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "humidity",
                "handleThings"
            ],
            "capabilities": [
                "relativeHumidityMeasurement",
                "switch",
                "energyMeter"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Auto Humidity Vent",
            "description": "When the humidity reaches a specified level, activate one or more vent fans until the humidity is reduced to a specified level.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpGet",
                "httpDelete"
            ],
            "name": "Life360 (Connect)",
            "description": "Life360 Service Manager",
            "category": "Life360 (Connect)",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "presence",
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Presence Change Text",
            "description": "Send me a text message when my presence status changes.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "presenceSensor"
            ],
            "sources": [],
            "sinks": [],
            "name": "Smart turn it on",
            "description": "Turns on selected device(s) at a set time on selected days of the week only if a selected person is present and turns off selected device(s) after a set time.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "colorControl"
            ],
            "sources": [],
            "sinks": [
                "httpGet"
            ],
            "name": "Jenkins Notifier",
            "description": "Turn off and on devices based on the state that your Jenkins Build is in.",
            "category": "Fun & Social",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "motion.active"
            ],
            "capabilities": [
                "contactSensor",
                "motionSensor",
                "alarm",
                "switch"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Forgiving Security",
            "description": "Alerts you if something happens while you're away.  Has a settable grace period to compensate for presence sensors that may take a few seconds to be noticed.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "motionSensor",
                "motion",
                "switch",
                "illuminance",
                "location",
                "position",
                "sunriseTime",
                "sunsetTime"
            ],
            "capabilities": [
                "switch",
                "switchLevel",
                "motionSensor",
                "illuminanceMeasurement"
            ],
            "sources": [
                "mode",
                "motionSensor",
                "location"
            ],
            "sinks": [],
            "name": "Bright When Dark And/Or Bright After Sunset",
            "description": "Turn ON light(s) and/or dimmer(s) when there's movement and the room is dark with illuminance threshold and/or between sunset and sunrise. Then turn OFF after X minute(s) when the brightness of the room is above the illuminance threshold or turn OFF after X minute(s) when there is no movement.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature"
            ],
            "capabilities": [
                "contactSensor",
                "temperatureMeasurement"
            ],
            "sources": [],
            "sinks": [
                "sendSms"
            ],
            "name": "Smart Windows",
            "description": "Compares two temperatures – indoor vs outdoor, for example – then sends an alert if windows are open (or closed!). If you don't use an external temperature device, your location will be used instead.",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings"
            ],
            "name": "SmartBlock Manager",
            "description": "A SmartApp for managing SmartBlocks",
            "actions": []
        },
        {
            "subscriptions": [
                "heatingSetpoint",
                "coolingSetpoint",
                "temperature",
                "location"
            ],
            "capabilities": [
                "thermostat"
            ],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Keep Me Cozy",
            "description": "Changes your thermostat settings automatically in response to a mode change.  Often used with Bon Voyage, Rise and Shine, and other Mode Magic SmartApps to automatically keep you comfortable while you're present and save you energy and money while you are away.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "motion.active"
            ],
            "capabilities": [
                "motionSensor"
            ],
            "sources": [],
            "sinks": [
                "sendSms"
            ],
            "name": "Smart Care - Detect Motion",
            "description": "Monitors motion sensors in bedroom and bathroom during the night and detects if occupant does not return from the bathroom after a specified period of time.",
            "category": "Family",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "lock"
            ],
            "sources": [
                "mode"
            ],
            "sinks": [],
            "name": "Good Night House",
            "description": "Some on, some off with delay for bedtime, Lock The Doors",
            "category": "Convenience",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "motionSensor",
                "motion",
                "presence"
            ],
            "capabilities": [
                "switch",
                "motionSensor",
                "presenceSensor"
            ],
            "sources": [
                "motionSensor",
                "presence"
            ],
            "sinks": [],
            "name": "Lights Off with No Motion and Presence",
            "description": "Turn lights off when no motion and presence is detected for a set period of time.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "humidity"
            ],
            "capabilities": [
                "relativeHumidityMeasurement",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Coffee After Shower",
            "description": "This app is designed simply to turn on your coffee machine while you are taking a shower.",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "mode",
                "phone",
                "presence"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Greetings Earthling",
            "description": "Monitors a set of presence detectors and triggers a mode change when someone arrives at home.",
            "category": "Mode Magic",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [],
            "name": "Virtual Device Creator",
            "description": "Creates virtual devices",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Working From Home",
            "description": "If after a particular time of day a certain person is still at home, trigger a 'Working From Home' action.",
            "category": "Mode Magic",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature",
                "location",
                "contact.open",
                "contact.closed"
            ],
            "capabilities": [
                "temperatureMeasurement",
                "thermostat",
                "contactSensor"
            ],
            "sources": [
                "location"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Thermostat Mode Director",
            "description": "Changes mode of your thermostat based on the temperature range of a specified temperature sensor and shuts off the thermostat if any windows/doors are open.",
            "category": "Green Living",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpGet",
                "httpPutJson"
            ],
            "name": "LIFX (Connect)",
            "description": "Allows you to use LIFX smart light bulbs with SmartThings.",
            "category": "LIFX (Connect)",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "lock"
            ],
            "sources": [],
            "sinks": [
                "mappings"
            ],
            "name": "Vinli Home Connect",
            "description": "Allows Vinli users to connect their car to SmartThings",
            "category": "SmartThings Labs",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [
                "lock"
            ],
            "capabilities": [
                "lock"
            ],
            "sources": [
                "phone",
                "lock"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Door Lock Code Distress Message",
            "description": "Sends a text to someone when a specific code is entered",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open"
            ],
            "capabilities": [
                "contactSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Turn It On For 5 Minutes",
            "description": "When a SmartSense Multi is opened, a switch will be turned on, and then turned off after 5 minutes.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [],
            "name": "SmartWeather Station Controller",
            "description": "Updates SmartWeather Station Tile devices every hour.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "nfcTouch"
            ],
            "capabilities": [
                "touchSensor",
                "switch",
                "lock",
                "doorControl"
            ],
            "sources": [
                "lock"
            ],
            "sinks": [],
            "name": "NFC Tag Toggle",
            "description": "Allows toggling of a switch, lock, or garage door based on an NFC Tag touch event",
            "category": "SmartThings Internal",
            "actions": []
        },
        {
            "subscriptions": [
                "contact",
                "presence",
                "acceleration",
                "contact.closed"
            ],
            "capabilities": [
                "contactSensor",
                "momentary",
                "presenceSensor",
                "accelerationSensor"
            ],
            "sources": [
                "phone",
                "presence"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Ridiculously Automated Garage Door",
            "description": "Monitors arrival and departure of car(s) and 1) opens door when car arrives, 2) closes door after car has departed (for N minutes), 3) opens door when car door motion is detected, 4) closes door when door was opened due to arrival and interior door is closed.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "mode"
            ],
            "sinks": [],
            "name": "Every Element",
            "description": "Every element demonstration app",
            "category": "SmartThings Internal",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "beacon",
                "switch",
                "lock"
            ],
            "sources": [
                "phone",
                "mode",
                "presence"
            ],
            "sinks": [],
            "name": "Beacon Control",
            "description": "Execute a Hello, Home phrase, turn on or off some lights, and/or lock or unlock your door when you enter or leave a monitored region",
            "category": "SmartThings Internal",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor",
                "lock"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "Lock It When I Leave",
            "description": "Locks a deadbolt or lever lock when a SmartSense Presence tag or smartphone leaves a location.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "goal",
                "steps"
            ],
            "capabilities": [
                "switch",
                "colorControl",
                "musicPlayer"
            ],
            "sources": [],
            "sinks": [],
            "name": "Step Notifier",
            "description": "Use a step tracker device to track daily step goals and trigger various device actions when your goals are met!",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature",
                "motion"
            ],
            "capabilities": [
                "temperatureMeasurement",
                "switch",
                "motionSensor"
            ],
            "sources": [
                "mode"
            ],
            "sinks": [],
            "name": "Virtual Thermostat",
            "description": "Control a space heater or window air conditioner in conjunction with any temperature sensor, like a SmartSense Multi.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "redstoneSignalStrength",
                "smartBlockNeighborChanged",
                "blockDestroyed.true"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms",
                "httpPost"
            ],
            "name": "SmartBlock Notifier",
            "description": "A SmartApp that notifies you when things are happening around your SmartBlocks",
            "actions": []
        },
        {
            "subscriptions": [
                "acceleration",
                "alarm",
                "battery",
                "presence",
                "carbonMonoxide",
                "hue",
                "saturation",
                "color",
                "contact",
                "energy",
                "illuminance",
                "lock",
                "motion",
                "status",
                "level",
                "trackDescription",
                "trackData",
                "mute",
                "power",
                "humidity",
                "switch",
                "sleeping",
                "smoke",
                "steps",
                "goal",
                "temperature",
                "heatingSetpoint",
                "coolingSetpoint",
                "thermostatSetpoint",
                "thermostatMode",
                "thermostatFanMode",
                "thermostatOperatingState",
                "water"
            ],
            "capabilities": [
                "accelerationSensor",
                "alarm",
                "battery",
                "beacon",
                "carbonMonoxideDetector",
                "colorControl",
                "contactSensor",
                "doorControl",
                "energyMeter",
                "illuminanceMeasurement",
                "lock",
                "motionSensor",
                "musicPlayer",
                "powerMeter",
                "presenceSensor",
                "relativeHumidityMeasurement",
                "relaySwitch",
                "sleepSensor",
                "smokeDetector",
                "stepSensor",
                "switch",
                "switchLevel",
                "temperatureMeasurement",
                "thermostat",
                "valve",
                "waterSensor"
            ],
            "sources": [
                "alarm",
                "presence",
                "lock"
            ],
            "sinks": [
                "mappings",
                "httpPostJson"
            ],
            "name": "Initial State Event Streamer",
            "description": "A SmartThings SmartApp to allow SmartThings events to be viewable inside an Initial State Event Bucket in your https://www.initialstate.com account.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "contact"
            ],
            "capabilities": [
                "contactSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Let There Be Dark!",
            "description": "Turn your lights off when a Contact Sensor is opened and turn them back on when it is closed, ONLY if the Lights were previouly on",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [],
            "name": "Device Tile Controller",
            "description": "A controller SmartApp to install virtual devices into your location in order to simulate various native Device Tiles.",
            "category": "SmartThings Internal",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "motionSensor",
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Elder Care: Daily Routine",
            "description": "Stay connected to your loved ones. Get notified if they are not up and moving around by a specified time and/or if they have not opened a cabinet or door according to a set schedule.",
            "category": "Family",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed"
            ],
            "capabilities": [
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Left It Open",
            "description": "Notifies you when you have left a door or window open longer that a specified amount of time.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpPostJson",
                "httpDelete",
                "httpGet",
                "httpPutJson"
            ],
            "name": "Quirky (Connect)",
            "description": "Connect your Quirky to SmartThings.",
            "category": "Quirky (Connect)",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings"
            ],
            "name": "BeaconThings Manager",
            "description": "SmartApp to interact with the BeaconThings iOS app. Use this app to integrate iBeacons into your smart home.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "presence.present",
                "presence"
            ],
            "capabilities": [
                "presenceSensor",
                "lock"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "Unlock It When I Arrive",
            "description": "Unlocks the door when you arrive at your location.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "threeAxis"
            ],
            "capabilities": [
                "threeAxis",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Mood Cube",
            "description": "Set your lighting by rotating a cube containing a SmartSense Multi",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "temperatureMeasurement",
                "relativeHumidityMeasurement"
            ],
            "sources": [],
            "sinks": [
                "httpGet"
            ],
            "name": "Weather Underground PWS Connect",
            "description": "Connect your SmartSense Temp/Humidity sensor to your Weather Underground Personal Weather Station.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "power"
            ],
            "capabilities": [
                "powerMeter"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Energy Alerts",
            "description": "Get notified if you're using too much energy",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "switch.on",
                "switch.off",
                "level"
            ],
            "capabilities": [
                "switch",
                "switchLevel"
            ],
            "sources": [],
            "sinks": [],
            "name": "The Big Switch",
            "description": "Turns on, off and dim a collection of lights based on the state of a specific switch.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "lock",
                "contactSensor"
            ],
            "sources": [
                "lock",
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Lock it at a specific time",
            "description": "Make sure a door is locked at a specific time.  Option to add door contact sensor to only lock if closed.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "motion"
            ],
            "capabilities": [
                "motionSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Light Follows Me",
            "description": "Turn your lights on when motion is detected and then off again once the motion stops for a set period of time.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "switch",
                "switchHandler"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "mode"
            ],
            "sinks": [],
            "name": "Switch Changes Mode",
            "description": "Ties a mode to a switch's state. Perfect for use with IFTTT.",
            "category": "Convenience",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "acceleration.active"
            ],
            "capabilities": [
                "accelerationSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Mail Arrived",
            "description": "Send a text when mail arrives in your mailbox using a SmartSense Multi on your mailbox door. Note: battery life may be impacted in cold climates.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "switch",
                "motion",
                "contact"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Smart Light Timer, X minutes unless already on",
            "description": "Turns on a switch for X minutes, then turns it off. Unless, the switch is already on, in which case it stays on. If the switch is toggled while the timer is running, the timer is canceled.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "contactSensor",
                "switchLevel",
                "colorControl",
                "colorTemperature",
                "switch",
                "smokeDetector",
                "windowShade",
                "garageDoorControl",
                "waterSensor",
                "motionSensor",
                "presenceSensor",
                "outlet",
                "powerMeter",
                "lock",
                "temperatureMeasurement",
                "battery"
            ],
            "sources": [],
            "sinks": [
                "mappings"
            ],
            "name": "Gideon Smart Home",
            "description": "Gideon Smart Home SmartApp allows you to connect and control all of your SmartThings devices through the Gideon app, making your SmartThings devices even smarter.",
            "category": "Family",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpGet"
            ],
            "name": "Ecobee (Connect)",
            "description": "Connect your Ecobee thermostat to SmartThings.",
            "category": "Ecobee (Connect)",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "switch.on"
            ],
            "capabilities": [
                "switch",
                "contactSensor"
            ],
            "sources": [],
            "sinks": [
                "httpGet"
            ],
            "name": "Goodnight Ubi",
            "description": "An app to coordinate bedtime activities between Ubi and SmartThings.  This app will activate when a Virtual Tile is triggers (Setup custom behavior in Ubi to turn on this tile when you say goodnight to ubi).  This app will then turn off selected lights after a specified number of minutes.  It will also check if any doors or windows are open.  If they are, Ubi will tell you which ones are open.  Finally, the app will say goodnight to hello home if requested.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpGet"
            ],
            "name": "Withings",
            "description": "Connect your Withings scale to SmartThings.",
            "category": "Withings",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "lock",
                "unlock",
                "contact.open",
                "contact.closed"
            ],
            "capabilities": [
                "lock",
                "contactSensor"
            ],
            "sources": [
                "phone",
                "lock"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Smart Auto Lock / Unlock",
            "description": "Automatically locks door X minutes after being closed and keeps door unlocked if door is open.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "location"
            ],
            "capabilities": [],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [
                "httpPost"
            ],
            "name": "SmartBlock Chat Sender",
            "description": "Send chat messages into Minecraft via the SmartBlock mod",
            "actions": []
        },
        {
            "subscriptions": [
                "heatingSetpoint",
                "coolingSetpoint",
                "thermostatSetpoint",
                "thermostatMode",
                "thermostatFanMode",
                "thermostatOperatingState",
                "temperature"
            ],
            "capabilities": [
                "thermostat"
            ],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPostJson"
            ],
            "name": "WeatherBug Home",
            "description": "WeatherBug Home",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature"
            ],
            "capabilities": [
                "temperatureMeasurement",
                "switch"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "It's Too Hot",
            "description": "Monitor the temperature and when it rises above your setting get a notification and/or turn on an A/C unit or fan.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "lock"
            ],
            "sources": [
                "lock"
            ],
            "sinks": [
                "mappings"
            ],
            "name": "Alfred Workflow",
            "description": "This SmartApp allows you to interact with the things in your physical graph through Alfred.",
            "category": "Convenience",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [
                "acceleration.active"
            ],
            "capabilities": [
                "accelerationSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "It Moved",
            "description": "Send a text when movement is detected",
            "category": "Fun & Social",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "motionSensor",
                "contactSensor",
                "presenceSensor",
                "temperatureMeasurement",
                "accelerationSensor",
                "waterSensor",
                "illuminanceMeasurement",
                "relativeHumidityMeasurement",
                "alarm",
                "lock"
            ],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPostJson"
            ],
            "name": "IFTTT",
            "description": "Put the internet to work for you.",
            "category": "SmartThings Internal",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpGet",
                "httpPostJson"
            ],
            "name": "CURB Energy Monitor",
            "description": "Gain insight into energy usage throughout your home.",
            "category": "CURB Energy Monitor",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open"
            ],
            "capabilities": [
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Ready For Rain",
            "description": "Warn if doors or windows are open when inclement weather is approaching.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "httpPost"
            ],
            "name": "Tcp Bulbs (Connect)",
            "description": "Connect your TCP bulbs to SmartThings using Cloud to Cloud integration. You must create a remote login acct on TCP Mobile App.",
            "category": "SmartThings Labs",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor"
            ],
            "sources": [],
            "sinks": [],
            "name": "Send HAM Bridge Command When",
            "description": "Sends a command to your HAM Bridge server when SmartThings are activated.",
            "category": "Convenience",
            "actions": [
                "sendHubCommand"
            ]
        },
        {
            "subscriptions": [
                "acceleration.active",
                "contact.closed"
            ],
            "capabilities": [
                "accelerationSensor",
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [],
            "name": "Door Knocker",
            "description": "Alert if door is knocked, but not opened.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "acceleration.active",
                "acceleration.inactive"
            ],
            "capabilities": [
                "accelerationSensor",
                "switch"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Laundry Monitor",
            "description": "Sends a message and (optionally) turns on or blinks a light to indicate that laundry is done.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open"
            ],
            "capabilities": [
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Text Me When It Opens",
            "description": "Get a text message sent to your phone when an open/close sensor is opened.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "motion.active"
            ],
            "capabilities": [
                "motionSensor",
                "presenceSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Text Me When There's Motion and I'm Not Here",
            "description": "Send a text message when there is motion while you are away.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "location",
                "switch.off"
            ],
            "capabilities": [
                "switchLevel",
                "sensor",
                "switch",
                "musicPlayer"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Gentle Wake Up",
            "description": "Dim your lights up slowly, allowing you to wake up more naturally.",
            "category": "Health & Wellness",
            "actions": [
                "setLocationMode",
                "textToSpeech"
            ]
        },
        {
            "subscriptions": [
                "switch",
                "level",
                "hue",
                "saturation",
                "colorTemperature"
            ],
            "capabilities": [
                "colorControl"
            ],
            "sources": [],
            "sinks": [],
            "name": "Color Coordinator",
            "description": "Ties multiple colored lights to one specific light's settings",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor",
                "switch"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "Turn On Only If I Arrive After Sunset",
            "description": "Turn something on only if you arrive after sunset and back off anytime you leave.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "location"
            ],
            "capabilities": [
                "switch",
                "presenceSensor"
            ],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Vacation Lighting Director",
            "description": "Randomly turn on/off lights to simulate the appearance of a occupied home while you are away.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "button.pushed",
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet"
            ],
            "capabilities": [
                "button",
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [],
            "name": "Notify Me When",
            "description": "Receive notifications when anything happens in your home.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "motion.active",
                "motion.inactive",
                "switch.off",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "switch"
            ],
            "sources": [
                "mode",
                "phone",
                "location"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Good Night",
            "description": "Changes mode when motion ceases after a specific time of night.",
            "category": "Mode Magic",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor",
                "button",
                "musicPlayer"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Bose® SoundTouch® Control",
            "description": "Control your Bose® SoundTouch® when certain actions take place in your home.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "power"
            ],
            "capabilities": [
                "powerMeter",
                "thermostat",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "CURB Energy Manager",
            "description": "Maximize your energy savings with CURB",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor",
                "button",
                "colorControl"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Hue Mood Lighting",
            "description": "Sets the colors and brightness level of your Philips Hue lights to match your mood.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open"
            ],
            "capabilities": [
                "contactSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Undead Early Warning",
            "description": "Undead Early Warning",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "motion.active",
                "motion.inactive",
                "presence.not present"
            ],
            "capabilities": [
                "motionSensor",
                "presenceSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Curling Iron",
            "description": "Turns on an outlet when the user is present and off after a period of time",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpGet",
                "httpDelete"
            ],
            "name": "Rachio (Connect)",
            "description": "Connect your Rachio Sprinklers to SmartThings.",
            "category": "Rachio (Connect)",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "motionSensor",
                "motion",
                "illuminance",
                "location",
                "position",
                "sunriseTime",
                "sunsetTime"
            ],
            "capabilities": [
                "switch",
                "motionSensor",
                "illuminanceMeasurement"
            ],
            "sources": [
                "motionSensor",
                "location"
            ],
            "sinks": [],
            "name": "Smart Nightlight",
            "description": "Turns on lights when it's dark and motion is detected. Turns lights off when it becomes light or some time after motion ceases.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "motion",
                "contact",
                "alarm"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "alarm",
                "switch"
            ],
            "sources": [
                "mode",
                "phone",
                "alarm"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Smart Security",
            "description": "Alerts you when there are intruders but not when you just got up for a glass of water in the middle of the night",
            "category": "Safety & Security",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "presence.present",
                "presence",
                "contact.open"
            ],
            "capabilities": [
                "presenceSensor",
                "contactSensor",
                "switch"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "Hall Light: Welcome Home",
            "description": "Turn on the hall light if someone comes home (presence) and the door opens.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "location"
            ],
            "capabilities": [
                "musicPlayer"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Sonos Music Modes",
            "description": "Plays a different selected song or station for each mode.",
            "category": "SmartThings Internal",
            "actions": []
        },
        {
            "subscriptions": [
                "energy",
                "switch"
            ],
            "capabilities": [
                "switch",
                "motionSensor",
                "presenceSensor",
                "lock",
                "temperatureMeasurement"
            ],
            "sources": [],
            "sinks": [
                "mappings"
            ],
            "name": "Gideon",
            "description": "Gideon AI Smart app allows you to connect and control all of your SmartThings devices through the Gideon AI app, making your SmartThings devices even smarter.",
            "category": "Family",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpGet"
            ],
            "name": "Withings Manager",
            "description": "Connect With Withings",
            "category": "Withings Manager",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [
                "presence",
                "location",
                "sunrise",
                "sunset"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "mode",
                "presence",
                "location"
            ],
            "sinks": [],
            "name": "Nobody Home",
            "description": "When everyone leaves, change mode.  If at least one person home, switch mode based on sun position.",
            "category": "Mode Magic",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "presence",
                "location",
                "sunrise",
                "sunset"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "mode",
                "presence",
                "location"
            ],
            "sinks": [],
            "name": "Hello, Home Phrase Director",
            "description": "Monitor a set of presence sensors and activate Hello, Home phrases based on whether your home is empty or occupied.  Each presence status change will check against the current 'sun state' to run phrases based on occupancy and whether the sun is up or down.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "doorState"
            ],
            "capabilities": [
                "doorControl",
                "colorControl"
            ],
            "sources": [],
            "sinks": [],
            "name": "Door State to Color Light (Hue Bulb)",
            "description": "Change the color of your Hue bulbs based on your coop's door status.",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "location"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Big Turn ON",
            "description": "Turn your lights on when the SmartApp is tapped or activated.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature"
            ],
            "capabilities": [
                "temperatureMeasurement",
                "switch"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "It's Too Cold",
            "description": "Monitor the temperature and when it drops below your setting get a text and/or turn on a heater or additional appliance.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "colorControl",
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor",
                "button"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Notify Me With Hue",
            "description": "Changes the color and brightness of Philips Hue bulbs when any of a variety of SmartThings is activated.  Supports motion, contact, acceleration, moisture and presence sensors as well as switches.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "location",
                "contact.open",
                "motion.active",
                "acceleration.active",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "carbonMonoxide.tested",
                "water.wet",
                "button"
            ],
            "capabilities": [
                "contactSensor",
                "motionSensor",
                "accelerationSensor",
                "smokeDetector",
                "waterSensor",
                "alarm",
                "switch",
                "imageCapture",
                "musicPlayer",
                "button"
            ],
            "sources": [
                "location"
            ],
            "sinks": [
                "mappings",
                "sendSms"
            ],
            "name": "Smart Alarm",
            "description": "A multi-zone virtual alarm panel, featuring customizable security zones. Setting of an alarm can activate sirens, turn on light switches, push notification and text message. Alarm is armed and disarmed simply by setting SmartThings location 'mode'.",
            "category": "Safety & Security",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [
                "contact.open"
            ],
            "capabilities": [
                "contactSensor",
                "illuminanceMeasurement",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Brighten Dark Places",
            "description": "Turn your lights on when a open/close sensor opens and the space is dark.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost",
                "httpGet"
            ],
            "name": "Smart Energy Service",
            "description": "With visible realtime energy usage status, have good energy habits and enrich your life\r\n",
            "category": "Smart Energy Service",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "motion"
            ],
            "capabilities": [
                "motionSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Turn Off With Motion",
            "description": "Turns off a device if there is motion",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "location",
                "DeviceCreated",
                "DeviceUpdated",
                "DeviceDeleted"
            ],
            "capabilities": [
                "switch",
                "thermostat"
            ],
            "sources": [
                "location"
            ],
            "sinks": [
                "mappings"
            ],
            "name": "OpenT2T SmartApp Test",
            "description": "SmartApp for end to end SmartThings scenarios via OpenT2T",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor",
                "switch"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "Turn It On When I'm Here",
            "description": "Turn something on when you arrive and back off when you leave.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "switch.on"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Sprayer Controller 2",
            "description": "Control Sprayers for a period of time a number of times per hour",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature"
            ],
            "capabilities": [
                "temperatureMeasurement",
                "thermostat"
            ],
            "sources": [],
            "sinks": [],
            "name": "Stelpro Get Remote Temperature",
            "description": "Retrieves the temperature from a sensor and sends it to a specific Stelpro thermostat.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor",
                "button",
                "musicPlayer"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Speaker Control",
            "description": "Play or pause your Speaker when certain actions take place in your home.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "presence.present",
                "presence"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "phone",
                "presence"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Carpool Notifier",
            "description": "Send notifications to your carpooling buddies when you arrive to pick them up. If the person you are picking up is home, and has been for 5 minutes or more, they will get a notification when you arrive.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [
                "mappings",
                "httpGet",
                "httpPost",
                "httpDelete"
            ],
            "name": "Jawbone UP (Connect)",
            "description": "Connect your Jawbone UP to SmartThings",
            "category": "Jawbone UP (Connect)",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "acceleration.active"
            ],
            "capabilities": [
                "accelerationSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "The Gun Case Moved",
            "description": "Send a text when your gun case moves",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "motion.inactive"
            ],
            "capabilities": [
                "motionSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Darken Behind Me",
            "description": "Turn your lights off after a period of no motion being observed.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Medicine Reminder",
            "description": "Set up a reminder so that if you forget to take your medicine (determined by whether a cabinet or drawer has been opened) by specified time you get a notification or text message.",
            "category": "Health & Wellness",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.closed"
            ],
            "capabilities": [
                "contactSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Lights Off, When Closed",
            "description": "Turn your lights off when an open/close sensor closes.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "sleeping"
            ],
            "capabilities": [],
            "sources": [],
            "sinks": [],
            "name": "Sleepy Time",
            "description": "Use Jawbone sleep mode events to automatically execute Hello, Home phrases. Automatially put the house to bed or wake it up in the morning by pushing the button on your UP.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "button"
            ],
            "capabilities": [
                "button",
                "switch",
                "lock",
                "musicPlayer",
                "alarm"
            ],
            "sources": [
                "mode",
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Button Controller",
            "description": "Control devices with buttons like the Aeon Labs Minimote",
            "category": "Convenience",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Severe Weather Alert",
            "description": "Get a push notification when severe weather is in your area.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "doorState"
            ],
            "capabilities": [
                "doorControl"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Door Jammed Notification",
            "description": "Sends a SmartThings notification and text messages when your CoopBoss detects a door jam.",
            "category": "My Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "water.dry",
                "water.wet"
            ],
            "capabilities": [
                "waterSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Dry the Wetspot",
            "description": "Turns switch on and off based on moisture sensor input.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "power"
            ],
            "capabilities": [
                "powerMeter",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Energy Saver",
            "description": "Turn things off if you're using too much energy",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "contactSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Has Barkley Been Fed?",
            "description": "Setup a schedule to be reminded to feed your pet. Purchase any SmartThings certified pet food feeder and install the Feed My Pet app, and set the time. You and your pet are ready to go. Your life just got smarter.",
            "category": "Pets",
            "actions": []
        },
        {
            "subscriptions": [
                "moisture_status",
                "battery_status"
            ],
            "capabilities": [
                "sensor"
            ],
            "sources": [],
            "sinks": [
                "mappings",
                "httpPost"
            ],
            "name": "PlantLink Connector",
            "description": "This SmartApp connects to myplantlink.com and forwards the device data to it so it can calculate easy to read plant status for your specific plant's needs.",
            "category": "PlantLink Connector",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "level",
                "switch"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "SmartBlock Linker",
            "description": "A SmartApp that links SmartBlocks to switches",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "thermostat",
                "windowShade"
            ],
            "sources": [],
            "sinks": [
                "mappings"
            ],
            "name": "Gidjit Hub",
            "description": "Act as an endpoint so user's of Gidjit can quickly access and control their devices and execute routines. Users can do this quickly as Gidjit filters these actions  based on their environment",
            "category": "Convenience",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Once a Day",
            "description": "Turn on one or more switches at a specified time and turn them off at a later time.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "presence.present",
                "presence.not present"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "imageCapture"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Photo Burst When...",
            "description": "Take a burst of photos and send a push notification when...",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor",
                "button",
                "musicPlayer"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Speaker Notify with Sound",
            "description": "Play a sound or custom message through your Speaker when the mode changes or other events occur.",
            "category": "SmartThings Labs",
            "actions": [
                "textToSpeech"
            ]
        },
        {
            "subscriptions": [
                "motion",
                "acceleration",
                "contact",
                "lock",
                "switch.off",
                "location"
            ],
            "capabilities": [
                "switch",
                "switchLevel",
                "motionSensor",
                "accelerationSensor",
                "contactSensor",
                "lock",
                "illuminanceMeasurement"
            ],
            "sources": [
                "lock",
                "location"
            ],
            "sinks": [],
            "name": "Lighting Director",
            "description": "Control up to 4 sets (scenarios) of lights based on motion, door contacts and illuminance levels.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "switch.programOn",
                "switch.off"
            ],
            "capabilities": [
                "switch",
                "contactSensor",
                "relativeHumidityMeasurement"
            ],
            "sources": [],
            "sinks": [],
            "name": "Spruce Scheduler",
            "description": "Setup schedules for Spruce irrigation controller",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "switch"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Double Tap",
            "description": "Turn on or off any number of switches when an existing switch is tapped twice in a row.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "presence"
            ],
            "sinks": [],
            "name": "Presence Change Push",
            "description": "Get a push notification when a SmartSense Presence tag or smartphone arrives at or departs from a location.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "motion.active",
                "acceleration.active",
                "temperature",
                "threeAxis"
            ],
            "capabilities": [
                "contactSensor",
                "motionSensor",
                "accelerationSensor",
                "threeAxis",
                "temperatureMeasurement",
                "presenceSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Safe Watch",
            "description": "Watch a series of sensors for any anomalies for securing a safe.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature",
                "checkThings",
                "thermostatMode",
                "contact"
            ],
            "capabilities": [
                "temperatureMeasurement",
                "switch",
                "thermostat",
                "contactSensor"
            ],
            "sources": [],
            "sinks": [],
            "name": "Whole House Fan",
            "description": "Toggle a whole house fan (switch) when: Outside is cooler than inside, Inside is above x temp, Thermostat is off",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [],
            "sinks": [],
            "name": "ObyThing Music (Connect)",
            "description": "Use this free SmartApp in conjunction with the ObyThing Music app for your Mac to control and automate music and more with iTunes and SmartThings.",
            "category": "SmartThings Labs",
            "actions": []
        },
        {
            "subscriptions": [
                "illuminance"
            ],
            "capabilities": [
                "illuminanceMeasurement",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Light Up the Night",
            "description": "Turn your lights on when it gets dark and off when it becomes light again.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open",
                "contact.closed",
                "acceleration.active",
                "motion.active",
                "switch.on",
                "switch.off",
                "presence.present",
                "presence.not present",
                "smoke.detected",
                "smoke.tested",
                "carbonMonoxide.detected",
                "water.wet",
                "button.pushed",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "contactSensor",
                "accelerationSensor",
                "switch",
                "presenceSensor",
                "smokeDetector",
                "waterSensor",
                "button",
                "musicPlayer"
            ],
            "sources": [
                "mode",
                "location"
            ],
            "sinks": [],
            "name": "Speaker Weather Forecast",
            "description": "Play a weather report through your Speaker when the mode changes or other events occur",
            "category": "SmartThings Labs",
            "actions": [
                "textToSpeech"
            ]
        },
        {
            "subscriptions": [
                "presence"
            ],
            "capabilities": [
                "presenceSensor"
            ],
            "sources": [
                "mode",
                "phone",
                "presence"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Bon Voyage",
            "description": "Monitors a set of SmartSense Presence tags or smartphones and triggers a mode change when everyone has left.  Used in conjunction with Big Turn Off or Make It So to turn off lights, appliances, adjust the thermostat, turn on security apps, and more.",
            "category": "Mode Magic",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [
                "mappings",
                "httpGet"
            ],
            "name": "Yoics (Connect)",
            "description": "Connect and Control your Yoics Enabled Devices",
            "category": "Yoics (Connect)",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Camera Power Scheduler",
            "description": "Turn the power on and off at a specific time. ",
            "category": "Available Beta Apps",
            "actions": []
        },
        {
            "subscriptions": [
                "button"
            ],
            "capabilities": [
                "switch",
                "lock",
                "musicPlayer"
            ],
            "sources": [
                "mode"
            ],
            "sinks": [],
            "name": "Single Button Controller",
            "description": "Use your Aeon Panic Button to setup events when the button is used",
            "category": "Reviewers",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "hubInfo"
            ],
            "capabilities": [],
            "sources": [],
            "sinks": [],
            "name": "Hub IP Notifier",
            "description": "Listen for local IP changes when your hub registers.",
            "category": "SmartThings Internal",
            "actions": []
        },
        {
            "subscriptions": [
                "location",
                "position",
                "sunriseTime",
                "sunsetTime"
            ],
            "capabilities": [
                "switch"
            ],
            "sources": [
                "mode",
                "phone",
                "location"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Sunrise/Sunset",
            "description": "Changes mode and controls lights based on local sunrise and sunset times.",
            "category": "Mode Magic",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [
                "lock",
                "unlock",
                "contact.open",
                "contact.closed"
            ],
            "capabilities": [
                "lock",
                "contactSensor"
            ],
            "sources": [
                "phone",
                "lock"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Enhanced Auto Lock Door",
            "description": "Automatically locks a specific door after X minutes when closed  and unlocks it when open after X seconds.",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [
                "contact",
                "sensorChange"
            ],
            "capabilities": [
                "thermostat",
                "contactSensor"
            ],
            "sources": [],
            "sinks": [],
            "name": "Thermostat Auto Off",
            "description": "Automatically turn off thermostat when windows/doors open. Turn it back on when everything is closed up.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "location",
                "null"
            ],
            "capabilities": [],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Foscam (Connect)",
            "description": "Connect and take pictures using your Foscam camera from inside the Smartthings app.",
            "category": "SmartThings Internal",
            "actions": [
                "sendHubCommand"
            ]
        },
        {
            "subscriptions": [
                "location",
                "null"
            ],
            "capabilities": [],
            "sources": [
                "location"
            ],
            "sinks": [],
            "name": "Simple Sync Connect",
            "description": "Integrate SmartThings with your Simple Control activities via Simple Sync.",
            "category": "My Apps",
            "actions": [
                "sendHubCommand"
            ]
        },
        {
            "subscriptions": [
                "acceleration"
            ],
            "capabilities": [
                "threeAxis"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Garage Door Monitor",
            "description": "Monitor your garage door and get a text message if it is open too long",
            "category": "Safety & Security",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [],
            "sources": [
                "mode",
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Scheduled Mode Change",
            "description": "Changes mode at a specific time of day.",
            "category": "Mode Magic",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [
                "musicPlayer",
                "switchLevel",
                "thermostat",
                "switch",
                "temperatureMeasurement",
                "relativeHumidityMeasurement"
            ],
            "sources": [
                "mode"
            ],
            "sinks": [],
            "name": "Talking Alarm Clock",
            "description": "Control up to 4 waking schedules using a Sonos speaker as an alarm.",
            "category": "Convenience",
            "actions": [
                "setLocationMode",
                "textToSpeech"
            ]
        },
        {
            "subscriptions": [
                "motion.active",
                "location"
            ],
            "capabilities": [
                "motionSensor",
                "switch"
            ],
            "sources": [
                "mode",
                "phone",
                "location"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Rise and Shine",
            "description": "Changes mode when someone wakes up after a set time in the morning.",
            "category": "Mode Magic",
            "actions": [
                "setLocationMode"
            ]
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch"
            ],
            "sources": [],
            "sinks": [
                "mappings"
            ],
            "name": "Curb Control",
            "description": "This SmartApp allows you to interact with the switches in your physical graph through Curb.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "humidity"
            ],
            "capabilities": [
                "relativeHumidityMeasurement",
                "switch"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Humidity Alert!",
            "description": "Notify me when the humidity rises above or falls below the given threshold. It will turn on a switch when it rises above the first threshold and off when it falls below the second threshold.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [],
            "capabilities": [
                "switch",
                "motionSensor",
                "lock",
                "contactSensor",
                "presenceSensor"
            ],
            "sources": [
                "presenceSensor",
                "motionSensor",
                "lock"
            ],
            "sinks": [
                "mappings",
                "httpPostJson"
            ],
            "name": "Ubi",
            "description": "Add your Ubi device to your SmartThings Account",
            "actions": [
                "callbyreflection"
            ]
        },
        {
            "subscriptions": [
                "motion.active"
            ],
            "capabilities": [
                "motionSensor"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Elder Care: Slip & Fall",
            "description": "Monitors motion sensors in bedroom and bathroom during the night and detects if occupant does not return from the bathroom after a specified period of time.",
            "category": "Family",
            "actions": []
        },
        {
            "subscriptions": [
                "humidity"
            ],
            "capabilities": [
                "relativeHumidityMeasurement",
                "switch"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Smart Humidifier",
            "description": "Turn on/off humidifier based on relative humidity from a sensor.",
            "category": "Convenience",
            "actions": []
        },
        {
            "subscriptions": [
                "temperature"
            ],
            "capabilities": [
                "contactSensor",
                "temperatureMeasurement"
            ],
            "sources": [],
            "sinks": [
                "sendSms"
            ],
            "name": "Weather Windows",
            "description": "Compares two temperatures – indoor vs outdoor, for example – then sends an alert if windows are open (or closed!). If you don't use an external temperature device, your zipcode will be used instead.",
            "category": "Convenience",
            "actions": [
                "sendEvent"
            ]
        },
        {
            "subscriptions": [
                "thermostatMode",
                "contact.open"
            ],
            "capabilities": [
                "contactSensor",
                "thermostat"
            ],
            "sources": [
                "phone"
            ],
            "sinks": [
                "sendSms"
            ],
            "name": "Thermostat Window Check",
            "description": "If your heating or cooling system come on, it gives you notice if there are any windows or doors left open, preventing the system from working optimally.",
            "category": "Green Living",
            "actions": []
        },
        {
            "subscriptions": [
                "contact.open"
            ],
            "capabilities": [
                "contactSensor",
                "switch"
            ],
            "sources": [],
            "sinks": [],
            "name": "Turn It On When It Opens",
            "description": "Turn something on when an open/close sensor opens.",
            "category": "Convenience",
            "actions": []
        }
    ]
}
